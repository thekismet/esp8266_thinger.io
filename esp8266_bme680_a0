#define THINGER_SERVER "xxx.xxx.xxx.xxx"
#define THINGER_PORT 25200

#include <ESP8266WiFi.h>
#include <ThingerESP8266.h>
#include <Wire.h>
#include <SPI.h>
#include <Adafruit_Sensor.h>
#include "Adafruit_BME680.h"

#define BME_SCK 13
#define BME_MISO 12
#define BME_MOSI 11
#define BME_CS 10

#define SEALEVELPRESSURE_HPA (1013.25)

#define USERNAME "xxx.xxx.xxx.xxx"
#define DEVICE_ID "xxx.xxx.xxx.xxx"
#define DEVICE_CREDENTIAL "xxx.xxx.xxx.xxx"

Adafruit_BME680 bme; // I2C
//Adafruit_BME680 bme(BME_CS); // hardware SPI
//Adafruit_BME680 bme(BME_CS, BME_MOSI, BME_MISO,  BME_SCK);

// thinger.io config
ThingerESP8266 thing(USERNAME, DEVICE_ID, DEVICE_CREDENTIAL);

#define SSID "xxx.xxx.xxx.xxx"
#define SSID_PASSWORD "xxx.xxx.xxx.xxx"

void setup() {
  
  Serial.begin(115200);
  while (!Serial);
  Serial.println(F("BME680"));
  delay(10);
  
  thing.add_wifi(SSID, SSID_PASSWORD);

  if (!bme.begin()) {
    Serial.println("Could not find a valid BME680 sensor, check wiring!");
    while (1);
  }

  // Set up oversampling and filter initialization
  bme.setTemperatureOversampling(BME680_OS_8X);
  bme.setHumidityOversampling(BME680_OS_2X);
  bme.setPressureOversampling(BME680_OS_4X);
  bme.setIIRFilterSize(BME680_FILTER_SIZE_3);
  bme.setGasHeater(320, 150); // 320*C for 150 ms
  
  thing["bme680"] >> [](pson& out){
    out["humidity"] = (bme.readHumidity());
    out["temperature"] = (bme.readTemperature() - 2.3);
    out["pressure"] = (bme.readPressure() / 100.0);
    out["altitude"] = (bme.readAltitude(SEALEVELPRESSURE_HPA));
    out["air"] = (bme.readGas() / 1000.0);
    out["light"] = (analogRead(A0));
  };
}

void loop() {
  thing.handle();
}
